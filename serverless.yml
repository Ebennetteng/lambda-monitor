service: lambda-monitor

package:
  exclude:
    - "*"
    - .idea/**
    - docs/**
    - test/**
    - coverage/**
    - config/**

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage}
  region: us-east-1
  memorySize: 256
  timeout: 30
  versionFunctions: false
  environment:
    ROLLBAR_ACCESS_TOKEN: ${file(config/${self:provider.stage}.yml):ROLLBAR_ACCESS_TOKEN}
    LOGGLY_TOKEN: ${file(config/${self:provider.stage}.yml):LOGGLY_TOKEN}
    LOGZ_TOKEN: ${file(config/${self:provider.stage}.yml):LOGZ_TOKEN}
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:ListFunctions"
        - "lambda:ListTags"
        - "logs:PutRetentionPolicy"
        - "logs:PutSubscriptionFilter"
      Resource:
        - "*"

functions:
  process-logs:
    handler: lib/handler.processLogs
    description: Processor for Lambda CloudWatch Streams
    tags:
      MONITOR: "1"
      MONITORED: "0"

  subscribe:
    handler: lib/handler.subscribe
    description: Subscribe Processor to Lambda CloudWatch Streams
    events:
      - schedule: rate(1 hour)
      - cloudwatchEvent:
          event:
            source:
              - aws.logs
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - logs.amazonaws.com
              eventName:
                - CreateLogGroup

  set-retention:
    handler: lib/handler.setRetention
    description: Update Retention for Lambda CloudWatch Streams
    events:
      - schedule: rate(1 hour)
      - cloudwatchEvent:
          event:
            source:
              - aws.logs
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - logs.amazonaws.com
              eventName:
                - CreateLogGroup

resources:
  Resources:
    LambdaInvokePermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        FunctionName: ${self:service}-${self:provider.stage}-process-logs
        Principal: logs.${self:provider.region}.amazonaws.com
      DependsOn:
        - ProcessDashlogsLambdaFunction

    # Dummy Resource to ensure Subscribe gets invoked on first deploy
    TriggerLambdaResource:
      Type: Custom::TriggerLambdaResource
      Properties:
        ServiceToken:
          Fn::GetAtt: [SubscribeLambdaFunction, Arn]
      DependsOn:
        - LambdaInvokePermission
        - SubscribeLambdaFunction
        - ProcessDashlogsLambdaFunction

    # Used to receive CloudTrail logs (required for cloudwatchEvent above)
    CloudTrailBucket:
      Type: AWS::S3::Bucket

    # Reference: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html
    CloudTrailBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: CloudTrailBucket
        PolicyDocument:
          Statement:
            -
              Sid: AWSCloudTrailAclCheck
              Effect: Allow
              Principal:
                Service: cloudtrail.amazonaws.com
              Action: s3:GetBucketAcl
              Resource:
                Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: CloudTrailBucket
            -
              Sid: AWSCloudTrailWrite
              Effect: Allow
              Principal:
                Service: cloudtrail.amazonaws.com
              Action: s3:PutObject
              Resource:
                Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: CloudTrailBucket
                    - "/AWSLogs/"
                    - Ref: "AWS::AccountId"
                    - "/*"
              Condition:
                StringEquals:
                  s3:x-amz-acl: bucket-owner-full-control
      DependsOn:
        - CloudTrailBucket

    CloudTrail:
      Type: AWS::CloudTrail::Trail
      Properties:
        S3BucketName:
          Ref: CloudTrailBucket
        IsLogging: true
      DependsOn:
        - CloudTrailBucketPolicy
